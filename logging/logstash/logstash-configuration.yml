---
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-configuration
data:
  logstash.conf: |-
    input {
      beats {
        port => 5044
        tags => [ "input:beats" ]
      }
    }

    filter {
      mutate {
        # remove unnecessary fields    
        remove_field => [ "[agent]", "[ecs][version]", "[input][type]", "[log]" ]
        # clean up kubernetes metadata
        rename => { "[kubernetes][node][name]" => "[kubernetes][node]" } 
        rename => { "[kubernetes][container][name]" => "[kubernetes][container]" }
        rename => { "[kubernetes][replicaset][name]" => "[kubernetes][replicaset]"} 
        rename => { "[kubernetes][pod][name]" => "[kubernetes][pod]" }
      }

      # parse access log
      if [kubernetes][annotations][org_o12stack/logs_hint] == "access-log" {
        grok {
          match => { "message" => "^%{COMMONAPACHELOG}$" }
          tag_on_failure => [ "access-log-parsing-error" ]
          add_tag => [ "access-log-parsed" ]
          overwrite => [ "clientip", "ident", "auth", "timestamp", "verb", "request", "httpversion", "response", "bytes", "referrer", "agent" ]
        }
      }
    }
    
    output {
      gelf {
            host => "graylog"
            port => "12201"
            sender => "%{[kubernetes][pod]}"
            protocol => "TCP"
      }
    }
